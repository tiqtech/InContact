<?xml version="1.0" encoding="UTF-8"?>
<project name="base-build">

	<property name="palm-bin" value="c:/program files (x86)/palm2/sdk/bin"/>
	<property name="TMP" value="../.tmp"/>

	<target name="clean">
		<echo message="Removing temp files"/>
		<delete dir="${TMP}" />
	</target>

	<target name="init" depends="clean">
		<mkdir dir="${TMP}" />
		<copy todir="${TMP}">
			<fileset dir="../../common"/>
		</copy>
		<copy todir="${TMP}" overwrite="true">
			<fileset dir="../src"/>
		</copy>
	</target>

	<target name="package" depends="get-app-info,generate-sources">
		<exec executable="${palm-bin}/palm-package.bat">
			<arg value="${TMP}" />
		</exec>
		<property name="ipkFile" value="${appInfo.id}_${appInfo.version}_all.ipk"/>
	</target>
	
	<target name="deploy" depends="package">
		<exec executable="${palm-bin}/palm-install.bat">
			<arg value="-d" />
			<arg value="${device}"/>
			<arg value="${ipkFile}"/>
		</exec>
	</target>
	
	<target name="launch" depends="deploy">
		<exec executable="${palm-bin}/palm-launch.bat">
			<arg value="-d" />
			<arg value="${device}"/>
			<arg value="${appInfo.id}" />
		</exec>
	</target>

	<target name="remove" depends="get-app-info">
		<exec executable="${palm-bin}/palm-install.bat">
			<arg value="-d" />
			<arg value="${device}"/>
			<arg value="-r" />
			<arg value="${appInfo.id}" />
		</exec>
	</target>
	
	<target name="remove-and-deploy" depends="remove,launch">
		<echo message="Remove and deploy complete"/>
	</target>
	
	<target name="get-app-info" depends="init">
		<loadfile property="appInfo" srcFile="${TMP}/appInfo.json"/>
		<script language="javascript">
		<![CDATA[
			var appInfo = eval('('+project.getProperty("appInfo") + ')');
			for(var k in appInfo) {
				project.setProperty("appInfo." + k, appInfo[k]);
			}
		]]>
		</script>
		<echo message="appInfo loaded and parsed for ${appInfo.title} (${appInfo.id})"/>
	</target>
	
	<target name="generate-sources" depends="init">
		<script language="javascript">
		<![CDATA[
			importClass(java.io.File);
			
			// Create a <fileset dir="" includes=""/>
			fs = project.createDataType("fileset");
			fs.setDir( new File("../.tmp") );
			fs.setIncludes("**/*.js");
			
			// Get the files (array) of that fileset
			ds = fs.getDirectoryScanner(project);
			srcFiles = ds.getIncludedFiles();
			
			sources = [];
			
			// iterate over that array
			for (i=0; i<srcFiles.length; i++) {
				f = srcFiles[i].replace("\\","/");
				if(/.*\/(.*)-assistant.js$/.test(f) && RegExp.$1 != "stage" && RegExp.$1 != "app") {
					sources.push('{"scenes":"' + RegExp.$1 + '","source":"' + f + '"}');
				} else {
					sources.push('{"source":"' + f + '"}');
				}
			}
			
			echo = project.createTask("echo");
			echo.setMessage("[\n" + sources.join(",\n") + "\n]");
			echo.setFile(new File("../.tmp/sources.json"));
			echo.perform();
			
			echo = project.createTask("echo");
			echo.setMessage("Added " + sources.length + " files to sources.json");
			echo.perform();
		]]>
		</script>
	</target>
	
</project>